package net.unikit.database.internal.implementations;// default package
// Generated 28.10.2015 13:39:49 by Hibernate Tools 4.0.0.Final

import net.unikit.database.internal.interfaces.Team;
import net.unikit.database.internal.interfaces.TeamApplication;
import net.unikit.database.internal.interfaces.TeamInvitation;
import net.unikit.database.internal.interfaces.TeamRegistration;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.*;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * TeamImpl generated by hbm2java
 */
@Entity
@Table(name = "TEAM")
final class TeamImpl implements Team, java.io.Serializable {
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	private Integer id;

    @Column(name = "course_id", nullable = false)
	private int courseId;

    @OneToMany(mappedBy = "team")
    private List<TeamRegistrationImpl> teamRegistrations = new ArrayList<>();

    @OneToMany(mappedBy = "team")
    private List<TeamInvitationImpl> teamInvitations = new ArrayList<>();

    @OneToMany(mappedBy = "team")
    private List<TeamApplicationImpl> teamApplications = new ArrayList<>();

    @Column(name = "created_by_student_number", nullable = false, length = 31)
	private String createdByStudentNumber;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_at", nullable = false, length = 19)
	private Date createdAt;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "updated_at", nullable = false, length = 19)
	private Date updatedAt;

	public TeamImpl() {
	}

	public TeamImpl(int courseId, String createdByStudentNumber, Date createdAt, Date updatedAt) {
		this.courseId = courseId;
		this.createdByStudentNumber = createdByStudentNumber;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public int getCourseId() {
        return courseId;
    }

    public void setCourseId(int courseId) {
        this.courseId = courseId;
    }

    @Transient
    public List<TeamRegistration> getTeamRegistrations() {
        return (List<TeamRegistration>)(List<?>) teamRegistrations;
    }

    @Transient
    public void setTeamRegistrations(List<TeamRegistration> teamRegistrations) {
        this.teamRegistrations = (List<TeamRegistrationImpl>)(List<?>) teamRegistrations;
    }

    @Transient
    public List<TeamInvitation> getTeamInvitations() {
        return (List<TeamInvitation>)(List<?>) teamInvitations;
    }

    @Transient
    public void setTeamInvitations(List<TeamInvitation> teamInvitations) {
        this.teamInvitations = (List<TeamInvitationImpl>)(List<?>) teamInvitations;
    }

    @Transient
    public List<TeamApplication> getTeamApplications() {
        return (List<TeamApplication>)(List<?>) teamApplications;
    }

    @Transient
    public void setTeamApplications(List<TeamApplication> teamApplications) {
        this.teamApplications = (List<TeamApplicationImpl>)(List<?>) teamApplications;
    }

    public String getCreatedByStudentNumber() {
        return createdByStudentNumber;
    }

    public void setCreatedByStudentNumber(String createdByStudentNumber) {
        this.createdByStudentNumber = createdByStudentNumber;
    }

    public Date getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    public Date getUpdatedAt() {
        return updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof TeamImpl)) return false;

        TeamImpl team = (TeamImpl) o;

        return !(getId() != null ? !getId().equals(team.getId()) : team.getId() != null);

    }

    @Override
    public int hashCode() {
        return getId() != null ? getId().hashCode() : 0;
    }

    @Override
    public String toString() {
        return "Team{" +
                "id=" + id +
                ", courseId=" + courseId +
                ", createdByStudentNumber='" + createdByStudentNumber + '\'' +
                ", createdAt=" + createdAt +
                ", updatedAt=" + updatedAt +
                '}';
    }
}
